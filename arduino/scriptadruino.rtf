{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red96\green126\blue3;\red255\green255\blue255;\red61\green73\blue78;
\red9\green74\blue76;\red199\green63\blue5;\red131\green148\blue149;\red52\green62\blue66;\red17\green134\blue139;
}
{\*\expandedcolortbl;;\cssrgb\c44706\c55686\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c30588\c35686\c38039;
\cssrgb\c0\c36078\c37255;\cssrgb\c82745\c32941\c0;\cssrgb\c58431\c64706\c65098;\cssrgb\c26275\c30980\c32941;\cssrgb\c0\c59216\c61569;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #include\cf4 \strokec4  \cf5 \strokec5 <SPI.h>\cf4 \strokec4   \cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3  \cf2 \strokec2 #include\cf4 \strokec4  \cf5 \strokec5 <MFRC522.h>\cf4 \strokec4   \cb1 \
\cb3  \cf2 \strokec2 #define\cf4 \strokec4  \cf6 \strokec6 SS_PIN\cf4 \strokec4  \cf5 \strokec5 10\cf4 \strokec4   \cb1 \
\cb3  \cf2 \strokec2 #define\cf4 \strokec4  \cf6 \strokec6 RST_PIN\cf4 \strokec4  \cf5 \strokec5 9\cf4 \strokec4   \cb1 \
\cb3  \cf2 \strokec2 #define\cf4 \strokec4  \cf6 \strokec6 LED_G\cf4 \strokec4  \cf5 \strokec5 5\cf7 \strokec7  //define green LED pin  \cf4 \cb1 \strokec4 \
\cb3  \cf2 \strokec2 #define\cf4 \strokec4  \cf6 \strokec6 LED_R\cf4 \strokec4  \cf5 \strokec5 7\cf7 \strokec7  //define red LED  \cf4 \cb1 \strokec4 \
\cb3  \cf2 \strokec2 #define\cf4 \strokec4  \cf6 \strokec6 BUZZER\cf4 \strokec4  \cf5 \strokec5 6\cf7 \strokec7  //buzzer pin  \cf4 \cb1 \strokec4 \
\cb3  MFRC522 \cf6 \strokec6 mfrc522\cf8 \strokec8 (\cf4 \strokec4 SS_PIN, RST_PIN\cf8 \strokec8 )\cf4 \strokec4 ;\cf7 \strokec7  // Create MFRC522 instance.  \cf4 \cb1 \strokec4 \
\cb3  \cf9 \strokec9 void\cf4 \strokec4  \cf6 \strokec6 setup\cf8 \strokec8 ()\cf4 \strokec4    \cb1 \
\cb3  \cf8 \strokec8 \{\cf4 \strokec4   \cb1 \
\cb3  \cf6 \strokec6 Serial\cf4 \strokec4 .\cf6 \strokec6 begin\cf8 \strokec8 (\cf5 \strokec5 9600\cf8 \strokec8 )\cf4 \strokec4 ;\cf7 \strokec7  // Initialize serial communications with the PC  \cf4 \cb1 \strokec4 \
\cb3  \cf2 \strokec2 while\cf4 \strokec4  \cf8 \strokec8 (\cf4 \strokec4 !Serial\cf8 \strokec8 )\cf4 \strokec4 ;\cf7 \strokec7  // Do nothing if no serial port is opened (added for Arduinos based on ATMEGA32U4)  \cf4 \cb1 \strokec4 \
\cb3  \cf6 \strokec6 SPI\cf4 \strokec4 .\cf6 \strokec6 begin\cf8 \strokec8 ()\cf4 \strokec4 ;\cf7 \strokec7  // Init SPI bus  \cf4 \cb1 \strokec4 \
\cb3  \cf6 \strokec6 mfrc522\cf4 \strokec4 .\cf6 \strokec6 PCD_Init\cf8 \strokec8 ()\cf4 \strokec4 ;\cf7 \strokec7  // Init MFRC522  \cf4 \cb1 \strokec4 \
\cb3  \cf6 \strokec6 mfrc522\cf4 \strokec4 .\cf6 \strokec6 PCD_DumpVersionToSerial\cf8 \strokec8 ()\cf4 \strokec4 ;\cf7 \strokec7  // Show details of PCD - MFRC522 Card Reader details  \cf4 \cb1 \strokec4 \
\cb3  \cf6 \strokec6 Serial\cf4 \strokec4 .\cf6 \strokec6 println\cf8 \strokec8 (\cf6 \strokec6 F\cf8 \strokec8 (\cf5 \strokec5 "Scan PICC to see UID, SAK, type, and data blocks..."\cf8 \strokec8 ))\cf4 \strokec4 ;  \cb1 \
\cb3  \cf6 \strokec6 pinMode\cf8 \strokec8 (\cf4 \strokec4 LED_G, OUTPUT\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  \cf6 \strokec6 pinMode\cf8 \strokec8 (\cf4 \strokec4 LED_R, OUTPUT\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  \cf6 \strokec6 pinMode\cf8 \strokec8 (\cf4 \strokec4 BUZZER, OUTPUT\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  \cf8 \strokec8 \}\cf4 \strokec4   \cb1 \
\cb3  \cf9 \strokec9 void\cf4 \strokec4  \cf6 \strokec6 loop\cf8 \strokec8 ()\cf4 \strokec4    \cb1 \
\cb3  \cf8 \strokec8 \{\cf4 \strokec4   \cb1 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7  // Look for new cards  \cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3  \cf2 \strokec2 if\cf4 \strokec4  \cf8 \strokec8 (\cf4 \strokec4  ! \cf6 \strokec6 mfrc522\cf4 \strokec4 .\cf6 \strokec6 PICC_IsNewCardPresent\cf8 \strokec8 ())\cf4 \strokec4    \cb1 \
\cb3  \cf8 \strokec8 \{\cf4 \strokec4   \cb1 \
\cb3  \cf2 \strokec2 return\cf4 \strokec4 ;  \cb1 \
\cb3  \cf8 \strokec8 \}\cf4 \strokec4   \cb1 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7  // Select one of the cards  \cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3  \cf2 \strokec2 if\cf4 \strokec4  \cf8 \strokec8 (\cf4 \strokec4  ! \cf6 \strokec6 mfrc522\cf4 \strokec4 .\cf6 \strokec6 PICC_ReadCardSerial\cf8 \strokec8 ())\cf4 \strokec4    \cb1 \
\cb3  \cf8 \strokec8 \{\cf4 \strokec4   \cb1 \
\cb3  \cf2 \strokec2 return\cf4 \strokec4 ;  \cb1 \
\cb3  \cf8 \strokec8 \}\cf4 \strokec4   \cb1 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7  //Show UID on serial monitor  \cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3  \cf6 \strokec6 Serial\cf4 \strokec4 .\cf6 \strokec6 print\cf8 \strokec8 (\cf5 \strokec5 "UID tag :"\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  String content= \cf5 \strokec5 ""\cf4 \strokec4 ;  \cb1 \
\cb3  byte letter;  \cb1 \
\cb3  \cf2 \strokec2 for\cf4 \strokec4  \cf8 \strokec8 (\cf4 \strokec4 byte i = \cf5 \strokec5 0\cf4 \strokec4 ; i < \cf6 \strokec6 mfrc522\cf4 \strokec4 .\cf6 \strokec6 uid\cf4 \strokec4 .\cf6 \strokec6 size\cf4 \strokec4 ; i++\cf8 \strokec8 )\cf4 \strokec4    \cb1 \
\cb3  \cf8 \strokec8 \{\cf4 \strokec4   \cb1 \
\cb3  \cf6 \strokec6 Serial\cf4 \strokec4 .\cf6 \strokec6 print\cf8 \strokec8 (\cf6 \strokec6 mfrc522\cf4 \strokec4 .\cf6 \strokec6 uid\cf4 \strokec4 .\cf6 \strokec6 uidByte\cf4 \strokec4 [i] < 0x\cf5 \strokec5 10\cf4 \strokec4  ? \cf5 \strokec5 " 0"\cf4 \strokec4  : \cf5 \strokec5 " "\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  \cf6 \strokec6 Serial\cf4 \strokec4 .\cf6 \strokec6 print\cf8 \strokec8 (\cf6 \strokec6 mfrc522\cf4 \strokec4 .\cf6 \strokec6 uid\cf4 \strokec4 .\cf6 \strokec6 uidByte\cf4 \strokec4 [i], HEX\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  \cf6 \strokec6 content\cf4 \strokec4 .\cf6 \strokec6 concat\cf8 \strokec8 (\cf6 \strokec6 String\cf8 \strokec8 (\cf6 \strokec6 mfrc522\cf4 \strokec4 .\cf6 \strokec6 uid\cf4 \strokec4 .\cf6 \strokec6 uidByte\cf4 \strokec4 [i] < 0x\cf5 \strokec5 10\cf4 \strokec4  ? \cf5 \strokec5 " 0"\cf4 \strokec4  : \cf5 \strokec5 " "\cf8 \strokec8 ))\cf4 \strokec4 ;  \cb1 \
\cb3  \cf6 \strokec6 content\cf4 \strokec4 .\cf6 \strokec6 concat\cf8 \strokec8 (\cf6 \strokec6 String\cf8 \strokec8 (\cf6 \strokec6 mfrc522\cf4 \strokec4 .\cf6 \strokec6 uid\cf4 \strokec4 .\cf6 \strokec6 uidByte\cf4 \strokec4 [i], HEX\cf8 \strokec8 ))\cf4 \strokec4 ;  \cb1 \
\cb3  \cf8 \strokec8 \}\cf4 \strokec4   \cb1 \
\cb3  \cf6 \strokec6 Serial\cf4 \strokec4 .\cf6 \strokec6 println\cf8 \strokec8 ()\cf4 \strokec4 ;  \cb1 \
\cb3  \cf6 \strokec6 Serial\cf4 \strokec4 .\cf6 \strokec6 print\cf8 \strokec8 (\cf5 \strokec5 "Message : "\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  \cf6 \strokec6 content\cf4 \strokec4 .\cf6 \strokec6 toUpperCase\cf8 \strokec8 ()\cf4 \strokec4 ;  \cb1 \
\cb3  \cf2 \strokec2 if\cf4 \strokec4  \cf8 \strokec8 (\cf6 \strokec6 content\cf4 \strokec4 .\cf6 \strokec6 substring\cf8 \strokec8 (\cf5 \strokec5 1\cf8 \strokec8 )\cf4 \strokec4  == \cf5 \strokec5 "15550C09"\cf8 \strokec8 )\cf4 \strokec4   \cb1 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7  //change here the UID of the card/cards that you want to give access  \cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3  \cf8 \strokec8 \{\cf4 \strokec4   \cb1 \
\cb3  \cf6 \strokec6 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 LED_G, LOW\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  \cf6 \strokec6 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 LED_R, HIGH\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  \cf6 \strokec6 delay\cf8 \strokec8 (\cf5 \strokec5 500\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  \cf6 \strokec6 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 LED_R, LOW\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  \cf8 \strokec8 \}\cf4 \strokec4   \cb1 \
\cb3  \cf2 \strokec2 else\cf4 \strokec4    \cb1 \
\cb3  \cf8 \strokec8 \{\cf4 \strokec4   \cb1 \
\cb3  \cf6 \strokec6 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 LED_G, HIGH\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  \cf6 \strokec6 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 LED_R, LOW\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  \cf6 \strokec6 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 BUZZER, LOW\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  \cf6 \strokec6 delay\cf8 \strokec8 (\cf5 \strokec5 500\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  \cf6 \strokec6 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 LED_G, LOW\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  \cf6 \strokec6 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 BUZZER, HIGH\cf8 \strokec8 )\cf4 \strokec4 ;  \cb1 \
\cb3  \cf8 \strokec8 \}\cf4 \strokec4   \cb1 \
\cb3  \cf8 \strokec8 \}\cf4 \strokec4   \cb1 \
}